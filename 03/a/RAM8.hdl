// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    DMux8Way(in=load, sel[0]=address[0], sel[1]=address[1], sel[2]=address[2], a=L0, b=L1, c=L2, d=L3, e=L4, f=L5, g=L6, h=L7);

    Register(in=in, load=L0, out=D0);
    Register(in=in, load=L1, out=D1);
    Register(in=in, load=L2, out=D2);
    Register(in=in, load=L3, out=D3);
    Register(in=in, load=L4, out=D4);
    Register(in=in, load=L5, out=D5);
    Register(in=in, load=L6, out=D6);
    Register(in=in, load=L7, out=D7);

    Mux8Way16(a=D0, b=D1, c=D2, d=D3, e=D4, f=D5, g=D6, h=D7, sel[2]=address[2], sel[1]=address[1], sel[0]=address[0], out=out);

}